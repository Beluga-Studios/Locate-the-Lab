[gd_scene load_steps=6 format=3 uid="uid://b5meoxibrm6xu"]

[ext_resource type="PackedScene" uid="uid://xtp52ga273hp" path="res://scenes/images/menu_background.tscn" id="1_ti5dk"]
[ext_resource type="PackedScene" uid="uid://cqr1n7kcpijte" path="res://scenes/Buttons/map.tscn" id="2_ee4tp"]
[ext_resource type="PackedScene" uid="uid://c31folf7tqte2" path="res://scenes/Buttons/suicide.tscn" id="3_hmn0p"]

[sub_resource type="Shader" id="Shader_eqgfi"]
code = "shader_type canvas_item;

uniform bool EnableShader = true;
// Wether the gradient distance is calculated towards to bottom edge of the pixel
// if disabled, uses a corner of the pixel
uniform bool LinearGradient = false;
uniform bool ClampDist = true;
// \"Offsets the point\" where the distance is measured from, effectively moving the gradient
uniform float DistOffset: hint_range(-1.0, 1.0, 0.01) = -0.1;
// Just a constant value to add to the gradient to control the strength
uniform float DistAdd: hint_range(-1.0, 1.0, 0.01) = -0.13;
// If you are using upscaled pixel art, you can use this value to scale the grid up
uniform int GridScale: hint_range(1,100000, 1) = 1;
// Color of the gradient
uniform vec4 ModulateColor: source_color = vec4(0.0, 0.0, 0.0, 1.0);
uniform float GradientOpacity: hint_range(0.0, 1.0, 0.01) = 0.5;

vec2 grid(vec2 uv, vec2 tex_size){
	return fract(uv * tex_size / vec2(float(GridScale)));
}


void fragment() {
	if (EnableShader) {
		vec4 orig_color = texture(TEXTURE, UV);
		vec2 tex_size = vec2(textureSize(TEXTURE, 0));

		vec2 grid_uv = grid(UV, tex_size);
		float dist = 0.0;
		if (LinearGradient) {
			dist = 1.0 - (grid_uv.y + DistOffset);
		} else {
			dist = sqrt(pow(1.0 - (grid_uv.x + DistOffset), 2.0) + pow(1.0 - (grid_uv.y + DistOffset), 2.0));
		}
		dist += DistAdd;
		if (ClampDist) dist = clamp(dist, 0.0, 1.0);
		COLOR = mix(orig_color, ModulateColor, (1.0 - dist) * GradientOpacity);
	}
}
"

[sub_resource type="ShaderMaterial" id="ShaderMaterial_k8gdh"]
shader = SubResource("Shader_eqgfi")
shader_parameter/EnableShader = true
shader_parameter/LinearGradient = false
shader_parameter/ClampDist = true
shader_parameter/DistOffset = -0.1
shader_parameter/DistAdd = -0.13
shader_parameter/GridScale = 1
shader_parameter/ModulateColor = Color(0, 0, 0, 1)
shader_parameter/GradientOpacity = 0.5

[node name="Menu" type="Node2D"]
material = SubResource("ShaderMaterial_k8gdh")

[node name="Menu background" parent="." instance=ExtResource("1_ti5dk")]
position = Vector2(0, -30)

[node name="Camera2D" type="Camera2D" parent="."]
zoom = Vector2(2, 2)

[node name="MAP" parent="." instance=ExtResource("2_ee4tp")]
position = Vector2(134, -64)

[node name="Suicide" parent="." instance=ExtResource("3_hmn0p")]
position = Vector2(160, 136)
